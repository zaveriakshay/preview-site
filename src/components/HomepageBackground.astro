---
---

<div class="homepage-background" aria-hidden="true">
    <div class="gradient-mesh"></div>
    <div class="gradient-overlay"></div>
    <canvas class="gradient-canvas"></canvas>
</div>

<style>
    .homepage-background {
        position: absolute;
        inset: 0;
        z-index: -1;
        overflow: hidden;
        background: linear-gradient(180deg, #f7f9fb 0%, #ffffff 100%);
    }

    .gradient-mesh {
        position: absolute;
        width: 200%;
        height: 200%;
        top: -50%;
        left: -50%;
        background: 
            radial-gradient(ellipse 800px 500px at 20% 30%, rgba(120, 119, 234, 0.15), transparent),
            radial-gradient(ellipse 600px 400px at 80% 70%, rgba(255, 119, 119, 0.1), transparent),
            radial-gradient(ellipse 700px 500px at 50% 50%, rgba(120, 185, 255, 0.12), transparent),
            radial-gradient(ellipse 900px 600px at 30% 80%, rgba(255, 185, 120, 0.08), transparent);
        animation: meshMove 30s ease-in-out infinite;
        filter: blur(40px);
    }

    .gradient-overlay {
        position: absolute;
        inset: 0;
        background: 
            linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.4) 50%, transparent 100%),
            linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.6) 100%);
        mix-blend-mode: overlay;
    }

    .gradient-canvas {
        position: absolute;
        width: 100%;
        height: 100%;
        opacity: 0.5;
    }

    @keyframes meshMove {
        0%, 100% {
            transform: translate(0, 0) scale(1) rotate(0deg);
        }
        25% {
            transform: translate(-5%, -5%) scale(1.1) rotate(1deg);
        }
        50% {
            transform: translate(5%, -3%) scale(0.95) rotate(-1deg);
        }
        75% {
            transform: translate(-3%, 5%) scale(1.05) rotate(0.5deg);
        }
    }

    @media (prefers-reduced-motion: reduce) {
        .gradient-mesh {
            animation: none;
        }
    }
</style>

<script>
    const canvas = document.querySelector('.gradient-canvas') as HTMLCanvasElement;
    if (canvas) {
        const ctx = canvas.getContext('2d');
        if (ctx) {
            let time = 0;
            const colors = [
                { r: 120, g: 119, b: 234, x: 0.2, y: 0.3 },
                { r: 255, g: 119, b: 119, x: 0.8, y: 0.7 },
                { r: 120, g: 185, b: 255, x: 0.5, y: 0.5 },
                { r: 255, g: 185, b: 120, x: 0.3, y: 0.8 }
            ];

            function animate() {
                canvas.width = window.innerWidth;
                canvas.height = window.innerHeight;
                
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                
                colors.forEach((color, i) => {
                    const x = color.x * canvas.width + Math.sin(time + i) * 50;
                    const y = color.y * canvas.height + Math.cos(time + i) * 50;
                    
                    const gradient = ctx.createRadialGradient(x, y, 0, x, y, 300);
                    gradient.addColorStop(0, `rgba(${color.r}, ${color.g}, ${color.b}, 0.1)`);
                    gradient.addColorStop(1, 'transparent');
                    
                    ctx.fillStyle = gradient;
                    ctx.fillRect(0, 0, canvas.width, canvas.height);
                });
                
                time += 0.005;
                requestAnimationFrame(animate);
            }

            if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
                animate();
            }
        }
    }
</script>